// Developer Express Code Central Example:
// How to implement the ISearchControlClient interface
// 
// We have SearchControl
// (https://documentation.devexpress.com/#WindowsForms/clsDevExpressXtraEditorsSearchControltopic)
// (added in v14.1), which provides the search and filter functionality for the
// attached object. SearchControl can be attached to objects that support the
// ISearchControlClient interface. You can find a list of our controls that support
// this interface out of the box in the SearchControl
// (https://documentation.devexpress.com/#WindowsForms/clsDevExpressXtraEditorsSearchControltopic)
// help topic.
// However, this list can be extended by your own. This example
// illustrates how to implement the ISearchControlClient interface for a Form for
// searching and highlighting controls by their names.
// 
// To introduce the
// ISearchControlClient interface into your project, implement the following
// members: - SetSearchControl - this method is invoked when you attach/detach your
// object from the SearchControl.Client
// (https://documentation.devexpress.com/#WindowsForms/DevExpressXtraEditorsSearchControl_Clienttopic)
// property. - IsAttachedToSearchControl - this property determines whether your
// object is attached to SearchControl. - ApplyFindFilter - this method is invoked
// when filtering is performed. Here you need to implement your own logic for
// filtering. - CreateSearchProvider - this method must return
// SearchControlProviderBase's descendant. This provider contains SearchText and
// FilterCondition obtained from the RepositoryItemSearchControl.FilterCondition
// (https://documentation.devexpress.com/#WindowsForms/DevExpressXtraEditorsRepositoryRepositoryItemSearchControl_FilterConditiontopic)
// property.
// It is necessary to override the
// SearchControlProviderBase.GetCriteriaInfoCore method to return SearchInfoBase's
// descendant. This instance should contain all required information for your
// filtering. It is passed to the ApplyFindFilter method as a parameter.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=T162421

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dxExample.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "12.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
