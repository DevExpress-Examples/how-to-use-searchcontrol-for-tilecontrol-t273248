// Developer Express Code Central Example:
// How to implement the ISearchControlClient interface
// 
// We have SearchControl
// (https://documentation.devexpress.com/#WindowsForms/clsDevExpressXtraEditorsSearchControltopic)
// (added in v14.1), which provides the search and filter functionality for the
// attached object. SearchControl can be attached to objects that support the
// ISearchControlClient interface. You can find a list of our controls that support
// this interface out of the box in the SearchControl
// (https://documentation.devexpress.com/#WindowsForms/clsDevExpressXtraEditorsSearchControltopic)
// help topic.
// However, this list can be extended by your own. This example
// illustrates how to implement the ISearchControlClient interface for a Form for
// searching and highlighting controls by their names.
// 
// To introduce the
// ISearchControlClient interface into your project, implement the following
// members: - SetSearchControl - this method is invoked when you attach/detach your
// object from the SearchControl.Client
// (https://documentation.devexpress.com/#WindowsForms/DevExpressXtraEditorsSearchControl_Clienttopic)
// property. - IsAttachedToSearchControl - this property determines whether your
// object is attached to SearchControl. - ApplyFindFilter - this method is invoked
// when filtering is performed. Here you need to implement your own logic for
// filtering. - CreateSearchProvider - this method must return
// SearchControlProviderBase's descendant. This provider contains SearchText and
// FilterCondition obtained from the RepositoryItemSearchControl.FilterCondition
// (https://documentation.devexpress.com/#WindowsForms/DevExpressXtraEditorsRepositoryRepositoryItemSearchControl_FilterConditiontopic)
// property.
// It is necessary to override the
// SearchControlProviderBase.GetCriteriaInfoCore method to return SearchInfoBase's
// descendant. This instance should contain all required information for your
// filtering. It is passed to the ApplyFindFilter method as a parameter.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=T162421

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dxExample.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("dxExample.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
